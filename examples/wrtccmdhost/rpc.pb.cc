// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Result> {
} _Result_default_instance_;
class NewPCReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewPCReq> {
} _NewPCReq_default_instance_;
class NewPCResDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewPCRes> {
} _NewPCRes_default_instance_;
class SetDescReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetDescReq> {
} _SetDescReq_default_instance_;
class SetDescResDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetDescRes> {
} _SetDescRes_default_instance_;
class OfferAnswerReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OfferAnswerReq> {
} _OfferAnswerReq_default_instance_;
class OfferAnswerResDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OfferAnswerRes> {
} _OfferAnswerRes_default_instance_;
class TrackSrcDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TrackSrc> {
} _TrackSrc_default_instance_;
class NewUrlTracksReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewUrlTracksReq> {
} _NewUrlTracksReq_default_instance_;
class NewUrlTracksResDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewUrlTracksRes> {
} _NewUrlTracksRes_default_instance_;
class NewTrackSrcsResDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewTrackSrcsRes> {
} _NewTrackSrcsRes_default_instance_;
class FragDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Frag> {
} _Frag_default_instance_;
class TrackSrcSendPacketReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TrackSrcSendPacketReq> {
} _TrackSrcSendPacketReq_default_instance_;
class PacketDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Packet> {
} _Packet_default_instance_;
class OnTrackPacketMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OnTrackPacketMsg> {
} _OnTrackPacketMsg_default_instance_;
class AddTracksReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddTracksReq> {
} _AddTracksReq_default_instance_;
class EmptyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Empty> {
} _Empty_default_instance_;

namespace protobuf_rpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewPCReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewPCRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewPCRes, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewPCRes, pcid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDescReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDescReq, pcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDescReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDescReq, sdp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDescRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDescRes, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDescRes, sdp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfferAnswerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfferAnswerReq, pcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfferAnswerReq, audio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfferAnswerReq, video_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfferAnswerRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfferAnswerRes, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfferAnswerRes, sdp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackSrc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackSrc, tsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackSrc, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUrlTracksReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUrlTracksReq, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUrlTracksRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUrlTracksRes, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUrlTracksRes, tracksrcs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewTrackSrcsRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewTrackSrcsRes, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewTrackSrcsRes, tracksrcs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frag, off_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frag, len_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackSrcSendPacketReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackSrcSendPacketReq, tsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackSrcSendPacketReq, pkt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, buf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, frags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, samplerate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, bitspersample_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, nchannels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, nframes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnTrackPacketMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnTrackPacketMsg, pcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnTrackPacketMsg, pkt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddTracksReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddTracksReq, pcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddTracksReq, tracksrcs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Result)},
  { 7, -1, sizeof(NewPCReq)},
  { 12, -1, sizeof(NewPCRes)},
  { 19, -1, sizeof(SetDescReq)},
  { 27, -1, sizeof(SetDescRes)},
  { 34, -1, sizeof(OfferAnswerReq)},
  { 42, -1, sizeof(OfferAnswerRes)},
  { 49, -1, sizeof(TrackSrc)},
  { 56, -1, sizeof(NewUrlTracksReq)},
  { 62, -1, sizeof(NewUrlTracksRes)},
  { 69, -1, sizeof(NewTrackSrcsRes)},
  { 76, -1, sizeof(Frag)},
  { 83, -1, sizeof(TrackSrcSendPacketReq)},
  { 90, -1, sizeof(Packet)},
  { 102, -1, sizeof(OnTrackPacketMsg)},
  { 109, -1, sizeof(AddTracksReq)},
  { 116, -1, sizeof(Empty)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewPCReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewPCRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetDescReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetDescRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfferAnswerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfferAnswerRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrackSrc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewUrlTracksReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewUrlTracksRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewTrackSrcsRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Frag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrackSrcSendPacketReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Packet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnTrackPacketMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddTracksReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Empty_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "rpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

}  // namespace

void TableStruct::Shutdown() {
  _Result_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _NewPCReq_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _NewPCRes_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _SetDescReq_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _SetDescRes_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _OfferAnswerReq_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _OfferAnswerRes_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _TrackSrc_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _NewUrlTracksReq_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _NewUrlTracksRes_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _NewTrackSrcsRes_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _Frag_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _TrackSrcSendPacketReq_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _Packet_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _OnTrackPacketMsg_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _AddTracksReq_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _Empty_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Result_default_instance_.DefaultConstruct();
  _NewPCReq_default_instance_.DefaultConstruct();
  _NewPCRes_default_instance_.DefaultConstruct();
  _SetDescReq_default_instance_.DefaultConstruct();
  _SetDescRes_default_instance_.DefaultConstruct();
  _OfferAnswerReq_default_instance_.DefaultConstruct();
  _OfferAnswerRes_default_instance_.DefaultConstruct();
  _TrackSrc_default_instance_.DefaultConstruct();
  _NewUrlTracksReq_default_instance_.DefaultConstruct();
  _NewUrlTracksRes_default_instance_.DefaultConstruct();
  _NewTrackSrcsRes_default_instance_.DefaultConstruct();
  _Frag_default_instance_.DefaultConstruct();
  _TrackSrcSendPacketReq_default_instance_.DefaultConstruct();
  _Packet_default_instance_.DefaultConstruct();
  _OnTrackPacketMsg_default_instance_.DefaultConstruct();
  _AddTracksReq_default_instance_.DefaultConstruct();
  _Empty_default_instance_.DefaultConstruct();
  _NewPCRes_default_instance_.get_mutable()->res_ = const_cast< ::Result*>(
      ::Result::internal_default_instance());
  _SetDescRes_default_instance_.get_mutable()->res_ = const_cast< ::Result*>(
      ::Result::internal_default_instance());
  _OfferAnswerRes_default_instance_.get_mutable()->res_ = const_cast< ::Result*>(
      ::Result::internal_default_instance());
  _NewUrlTracksRes_default_instance_.get_mutable()->res_ = const_cast< ::Result*>(
      ::Result::internal_default_instance());
  _NewTrackSrcsRes_default_instance_.get_mutable()->res_ = const_cast< ::Result*>(
      ::Result::internal_default_instance());
  _TrackSrcSendPacketReq_default_instance_.get_mutable()->pkt_ = const_cast< ::Packet*>(
      ::Packet::internal_default_instance());
  _OnTrackPacketMsg_default_instance_.get_mutable()->pkt_ = const_cast< ::Packet*>(
      ::Packet::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\trpc.proto\"\'\n\006Result\022\r\n\004code\030\220N \001(\003\022\016\n\005"
      "error\030\221N \001(\t\"\n\n\010NewPCReq\".\n\010NewPCRes\022\024\n\003"
      "res\030\001 \001(\0132\007.Result\022\014\n\004pcid\030\002 \001(\004\"5\n\nSetD"
      "escReq\022\014\n\004pcid\030\003 \001(\004\022\014\n\004type\030\004 \001(\t\022\013\n\003sd"
      "p\030\005 \001(\t\"/\n\nSetDescRes\022\024\n\003res\030\006 \001(\0132\007.Res"
      "ult\022\013\n\003sdp\030\007 \001(\t\"<\n\016OfferAnswerReq\022\014\n\004pc"
      "id\030\010 \001(\004\022\r\n\005audio\030\t \001(\010\022\r\n\005video\030\n \001(\010\"3"
      "\n\016OfferAnswerRes\022\024\n\003res\030\013 \001(\0132\007.Result\022\013"
      "\n\003sdp\030\014 \001(\t\"2\n\010TrackSrc\022\014\n\004tsid\030\r \001(\004\022\030\n"
      "\004type\030\016 \001(\0162\n.TrackType\"\036\n\017NewUrlTracksR"
      "eq\022\013\n\003url\030\017 \001(\t\"E\n\017NewUrlTracksRes\022\024\n\003re"
      "s\030\020 \001(\0132\007.Result\022\034\n\ttrackSrcs\030\021 \003(\0132\t.Tr"
      "ackSrc\"E\n\017NewTrackSrcsRes\022\024\n\003res\030\022 \001(\0132\007"
      ".Result\022\034\n\ttrackSrcs\030\023 \003(\0132\t.TrackSrc\" \n"
      "\004Frag\022\013\n\003off\030\024 \001(\004\022\013\n\003len\030\025 \001(\004\";\n\025Track"
      "SrcSendPacketReq\022\014\n\004tsid\030\025 \001(\004\022\024\n\003pkt\030\026 "
      "\001(\0132\007.Packet\"\224\001\n\006Packet\022\030\n\004type\030\027 \001(\0162\n."
      "TrackType\022\013\n\003buf\030\030 \001(\014\022\024\n\005frags\030\031 \003(\0132\005."
      "Frag\022\022\n\nsampleRate\030\032 \001(\005\022\025\n\rbitsPerSampl"
      "e\030\033 \001(\005\022\021\n\tnChannels\030\034 \001(\005\022\017\n\007nFrames\030\035 "
      "\001(\005\"6\n\020OnTrackPacketMsg\022\014\n\004pcid\030\036 \001(\004\022\024\n"
      "\003pkt\030\037 \001(\0132\007.Packet\":\n\014AddTracksReq\022\014\n\004p"
      "cid\030  \001(\004\022\034\n\ttrackSrcs\030! \003(\0132\t.TrackSrc\""
      "\007\n\005Empty*!\n\tTrackType\022\t\n\005VIDEO\020\000\022\t\n\005AUDI"
      "O\020\0012\324\003\n\003Rpc\022\037\n\005NewPC\022\t.NewPCReq\032\t.NewPCR"
      "es\"\000\0221\n\013CreateOffer\022\017.OfferAnswerReq\032\017.O"
      "fferAnswerRes\"\000\0222\n\014CreateAnswer\022\017.OfferA"
      "nswerReq\032\017.OfferAnswerRes\"\000\022*\n\014SetLocalD"
      "esc\022\013.SetDescReq\032\013.SetDescRes\"\000\022+\n\rSetRe"
      "moteDesc\022\013.SetDescReq\032\013.SetDescRes\"\000\022$\n\t"
      "AddTracks\022\r.AddTracksReq\032\006.Empty\"\000\0224\n\014Ne"
      "wUrlTracks\022\020.NewUrlTracksReq\032\020.NewUrlTra"
      "cksRes\"\000\022*\n\014NewTrackSrcs\022\006.Empty\032\020.NewTr"
      "ackSrcsRes\"\000\0226\n\022TrackSrcSendPacket\022\026.Tra"
      "ckSrcSendPacketReq\032\006.Empty\"\000\022,\n\rOnTrackP"
      "acket\022\021.OnTrackPacketMsg\032\006.Empty\"\000b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1442);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rpc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_rpc_2eproto

const ::google::protobuf::EnumDescriptor* TrackType_descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_enum_descriptors[0];
}
bool TrackType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Result::kCodeFieldNumber;
const int Result::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Result::Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Result)
}
Result::Result(const Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:Result)
}

void Result::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Result::~Result() {
  // @@protoc_insertion_point(destructor:Result)
  SharedDtor();
}

void Result::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Result::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Result& Result::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

Result* Result::New(::google::protobuf::Arena* arena) const {
  Result* n = new Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Result::Clear() {
// @@protoc_insertion_point(message_clear_start:Result)
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = GOOGLE_LONGLONG(0);
}

bool Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(80010u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 code = 10000;
      case 10000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 10001;
      case 10001: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Result.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Result)
  return false;
#undef DO_
}

void Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 code = 10000;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10000, this->code(), output);
  }

  // string error = 10001;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Result.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10001, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:Result)
}

::google::protobuf::uint8* Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 code = 10000;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10000, this->code(), target);
  }

  // string error = 10001;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Result.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10001, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Result)
  return target;
}

size_t Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Result)
  size_t total_size = 0;

  // string error = 10001;
  if (this->error().size() > 0) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // int64 code = 10000;
  if (this->code() != 0) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Result)
  GOOGLE_DCHECK_NE(&from, this);
  const Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Result)
    MergeFrom(*source);
  }
}

void Result::MergeFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Result::CopyFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Result::IsInitialized() const {
  return true;
}

void Result::Swap(Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Result::InternalSwap(Result* other) {
  error_.Swap(&other->error_);
  std::swap(code_, other->code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Result::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Result

// int64 code = 10000;
void Result::clear_code() {
  code_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Result::code() const {
  // @@protoc_insertion_point(field_get:Result.code)
  return code_;
}
void Result::set_code(::google::protobuf::int64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:Result.code)
}

// string error = 10001;
void Result::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Result::error() const {
  // @@protoc_insertion_point(field_get:Result.error)
  return error_.GetNoArena();
}
void Result::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Result.error)
}
#if LANG_CXX11
void Result::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Result.error)
}
#endif
void Result::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Result.error)
}
void Result::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Result.error)
}
::std::string* Result::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:Result.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Result::release_error() {
  // @@protoc_insertion_point(field_release:Result.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Result::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:Result.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewPCReq::NewPCReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NewPCReq)
}
NewPCReq::NewPCReq(const NewPCReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NewPCReq)
}

void NewPCReq::SharedCtor() {
  _cached_size_ = 0;
}

NewPCReq::~NewPCReq() {
  // @@protoc_insertion_point(destructor:NewPCReq)
  SharedDtor();
}

void NewPCReq::SharedDtor() {
}

void NewPCReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewPCReq::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewPCReq& NewPCReq::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewPCReq* NewPCReq::New(::google::protobuf::Arena* arena) const {
  NewPCReq* n = new NewPCReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewPCReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NewPCReq)
}

bool NewPCReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NewPCReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:NewPCReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NewPCReq)
  return false;
#undef DO_
}

void NewPCReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NewPCReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:NewPCReq)
}

::google::protobuf::uint8* NewPCReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NewPCReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:NewPCReq)
  return target;
}

size_t NewPCReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NewPCReq)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewPCReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NewPCReq)
  GOOGLE_DCHECK_NE(&from, this);
  const NewPCReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewPCReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NewPCReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NewPCReq)
    MergeFrom(*source);
  }
}

void NewPCReq::MergeFrom(const NewPCReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NewPCReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void NewPCReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NewPCReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewPCReq::CopyFrom(const NewPCReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NewPCReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewPCReq::IsInitialized() const {
  return true;
}

void NewPCReq::Swap(NewPCReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewPCReq::InternalSwap(NewPCReq* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewPCReq::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewPCReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewPCRes::kResFieldNumber;
const int NewPCRes::kPcidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewPCRes::NewPCRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NewPCRes)
}
NewPCRes::NewPCRes(const NewPCRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_res()) {
    res_ = new ::Result(*from.res_);
  } else {
    res_ = NULL;
  }
  pcid_ = from.pcid_;
  // @@protoc_insertion_point(copy_constructor:NewPCRes)
}

void NewPCRes::SharedCtor() {
  ::memset(&res_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pcid_) -
      reinterpret_cast<char*>(&res_)) + sizeof(pcid_));
  _cached_size_ = 0;
}

NewPCRes::~NewPCRes() {
  // @@protoc_insertion_point(destructor:NewPCRes)
  SharedDtor();
}

void NewPCRes::SharedDtor() {
  if (this != internal_default_instance()) {
    delete res_;
  }
}

void NewPCRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewPCRes::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewPCRes& NewPCRes::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewPCRes* NewPCRes::New(::google::protobuf::Arena* arena) const {
  NewPCRes* n = new NewPCRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewPCRes::Clear() {
// @@protoc_insertion_point(message_clear_start:NewPCRes)
  if (GetArenaNoVirtual() == NULL && res_ != NULL) {
    delete res_;
  }
  res_ = NULL;
  pcid_ = GOOGLE_ULONGLONG(0);
}

bool NewPCRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NewPCRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Result res = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pcid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NewPCRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NewPCRes)
  return false;
#undef DO_
}

void NewPCRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NewPCRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Result res = 1;
  if (this->has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->res_, output);
  }

  // uint64 pcid = 2;
  if (this->pcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->pcid(), output);
  }

  // @@protoc_insertion_point(serialize_end:NewPCRes)
}

::google::protobuf::uint8* NewPCRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NewPCRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Result res = 1;
  if (this->has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->res_, deterministic, target);
  }

  // uint64 pcid = 2;
  if (this->pcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->pcid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NewPCRes)
  return target;
}

size_t NewPCRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NewPCRes)
  size_t total_size = 0;

  // .Result res = 1;
  if (this->has_res()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_);
  }

  // uint64 pcid = 2;
  if (this->pcid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pcid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewPCRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NewPCRes)
  GOOGLE_DCHECK_NE(&from, this);
  const NewPCRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewPCRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NewPCRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NewPCRes)
    MergeFrom(*source);
  }
}

void NewPCRes::MergeFrom(const NewPCRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NewPCRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_res()) {
    mutable_res()->::Result::MergeFrom(from.res());
  }
  if (from.pcid() != 0) {
    set_pcid(from.pcid());
  }
}

void NewPCRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NewPCRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewPCRes::CopyFrom(const NewPCRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NewPCRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewPCRes::IsInitialized() const {
  return true;
}

void NewPCRes::Swap(NewPCRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewPCRes::InternalSwap(NewPCRes* other) {
  std::swap(res_, other->res_);
  std::swap(pcid_, other->pcid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewPCRes::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewPCRes

// .Result res = 1;
bool NewPCRes::has_res() const {
  return this != internal_default_instance() && res_ != NULL;
}
void NewPCRes::clear_res() {
  if (GetArenaNoVirtual() == NULL && res_ != NULL) delete res_;
  res_ = NULL;
}
const ::Result& NewPCRes::res() const {
  // @@protoc_insertion_point(field_get:NewPCRes.res)
  return res_ != NULL ? *res_
                         : *::Result::internal_default_instance();
}
::Result* NewPCRes::mutable_res() {
  
  if (res_ == NULL) {
    res_ = new ::Result;
  }
  // @@protoc_insertion_point(field_mutable:NewPCRes.res)
  return res_;
}
::Result* NewPCRes::release_res() {
  // @@protoc_insertion_point(field_release:NewPCRes.res)
  
  ::Result* temp = res_;
  res_ = NULL;
  return temp;
}
void NewPCRes::set_allocated_res(::Result* res) {
  delete res_;
  res_ = res;
  if (res) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NewPCRes.res)
}

// uint64 pcid = 2;
void NewPCRes::clear_pcid() {
  pcid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 NewPCRes::pcid() const {
  // @@protoc_insertion_point(field_get:NewPCRes.pcid)
  return pcid_;
}
void NewPCRes::set_pcid(::google::protobuf::uint64 value) {
  
  pcid_ = value;
  // @@protoc_insertion_point(field_set:NewPCRes.pcid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetDescReq::kPcidFieldNumber;
const int SetDescReq::kTypeFieldNumber;
const int SetDescReq::kSdpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetDescReq::SetDescReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetDescReq)
}
SetDescReq::SetDescReq(const SetDescReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  sdp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdp().size() > 0) {
    sdp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdp_);
  }
  pcid_ = from.pcid_;
  // @@protoc_insertion_point(copy_constructor:SetDescReq)
}

void SetDescReq::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pcid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SetDescReq::~SetDescReq() {
  // @@protoc_insertion_point(destructor:SetDescReq)
  SharedDtor();
}

void SetDescReq::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetDescReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetDescReq::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetDescReq& SetDescReq::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetDescReq* SetDescReq::New(::google::protobuf::Arena* arena) const {
  SetDescReq* n = new SetDescReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetDescReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SetDescReq)
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pcid_ = GOOGLE_ULONGLONG(0);
}

bool SetDescReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetDescReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 pcid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SetDescReq.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sdp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdp().data(), static_cast<int>(this->sdp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SetDescReq.sdp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetDescReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetDescReq)
  return false;
#undef DO_
}

void SetDescReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetDescReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pcid = 3;
  if (this->pcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->pcid(), output);
  }

  // string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SetDescReq.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  // string sdp = 5;
  if (this->sdp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdp().data(), static_cast<int>(this->sdp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SetDescReq.sdp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sdp(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetDescReq)
}

::google::protobuf::uint8* SetDescReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetDescReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pcid = 3;
  if (this->pcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->pcid(), target);
  }

  // string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SetDescReq.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  // string sdp = 5;
  if (this->sdp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdp().data(), static_cast<int>(this->sdp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SetDescReq.sdp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sdp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetDescReq)
  return target;
}

size_t SetDescReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetDescReq)
  size_t total_size = 0;

  // string type = 4;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string sdp = 5;
  if (this->sdp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdp());
  }

  // uint64 pcid = 3;
  if (this->pcid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pcid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetDescReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetDescReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDescReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetDescReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetDescReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetDescReq)
    MergeFrom(*source);
  }
}

void SetDescReq::MergeFrom(const SetDescReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetDescReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.sdp().size() > 0) {

    sdp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdp_);
  }
  if (from.pcid() != 0) {
    set_pcid(from.pcid());
  }
}

void SetDescReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetDescReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDescReq::CopyFrom(const SetDescReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetDescReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDescReq::IsInitialized() const {
  return true;
}

void SetDescReq::Swap(SetDescReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetDescReq::InternalSwap(SetDescReq* other) {
  type_.Swap(&other->type_);
  sdp_.Swap(&other->sdp_);
  std::swap(pcid_, other->pcid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetDescReq::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetDescReq

// uint64 pcid = 3;
void SetDescReq::clear_pcid() {
  pcid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SetDescReq::pcid() const {
  // @@protoc_insertion_point(field_get:SetDescReq.pcid)
  return pcid_;
}
void SetDescReq::set_pcid(::google::protobuf::uint64 value) {
  
  pcid_ = value;
  // @@protoc_insertion_point(field_set:SetDescReq.pcid)
}

// string type = 4;
void SetDescReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetDescReq::type() const {
  // @@protoc_insertion_point(field_get:SetDescReq.type)
  return type_.GetNoArena();
}
void SetDescReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetDescReq.type)
}
#if LANG_CXX11
void SetDescReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetDescReq.type)
}
#endif
void SetDescReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetDescReq.type)
}
void SetDescReq::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetDescReq.type)
}
::std::string* SetDescReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:SetDescReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetDescReq::release_type() {
  // @@protoc_insertion_point(field_release:SetDescReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetDescReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:SetDescReq.type)
}

// string sdp = 5;
void SetDescReq::clear_sdp() {
  sdp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetDescReq::sdp() const {
  // @@protoc_insertion_point(field_get:SetDescReq.sdp)
  return sdp_.GetNoArena();
}
void SetDescReq::set_sdp(const ::std::string& value) {
  
  sdp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetDescReq.sdp)
}
#if LANG_CXX11
void SetDescReq::set_sdp(::std::string&& value) {
  
  sdp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetDescReq.sdp)
}
#endif
void SetDescReq::set_sdp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sdp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetDescReq.sdp)
}
void SetDescReq::set_sdp(const char* value, size_t size) {
  
  sdp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetDescReq.sdp)
}
::std::string* SetDescReq::mutable_sdp() {
  
  // @@protoc_insertion_point(field_mutable:SetDescReq.sdp)
  return sdp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetDescReq::release_sdp() {
  // @@protoc_insertion_point(field_release:SetDescReq.sdp)
  
  return sdp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetDescReq::set_allocated_sdp(::std::string* sdp) {
  if (sdp != NULL) {
    
  } else {
    
  }
  sdp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdp);
  // @@protoc_insertion_point(field_set_allocated:SetDescReq.sdp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetDescRes::kResFieldNumber;
const int SetDescRes::kSdpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetDescRes::SetDescRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetDescRes)
}
SetDescRes::SetDescRes(const SetDescRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sdp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdp().size() > 0) {
    sdp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdp_);
  }
  if (from.has_res()) {
    res_ = new ::Result(*from.res_);
  } else {
    res_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:SetDescRes)
}

void SetDescRes::SharedCtor() {
  sdp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_ = NULL;
  _cached_size_ = 0;
}

SetDescRes::~SetDescRes() {
  // @@protoc_insertion_point(destructor:SetDescRes)
  SharedDtor();
}

void SetDescRes::SharedDtor() {
  sdp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete res_;
  }
}

void SetDescRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetDescRes::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetDescRes& SetDescRes::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetDescRes* SetDescRes::New(::google::protobuf::Arena* arena) const {
  SetDescRes* n = new SetDescRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetDescRes::Clear() {
// @@protoc_insertion_point(message_clear_start:SetDescRes)
  sdp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && res_ != NULL) {
    delete res_;
  }
  res_ = NULL;
}

bool SetDescRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetDescRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Result res = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sdp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdp().data(), static_cast<int>(this->sdp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SetDescRes.sdp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetDescRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetDescRes)
  return false;
#undef DO_
}

void SetDescRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetDescRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Result res = 6;
  if (this->has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->res_, output);
  }

  // string sdp = 7;
  if (this->sdp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdp().data(), static_cast<int>(this->sdp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SetDescRes.sdp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sdp(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetDescRes)
}

::google::protobuf::uint8* SetDescRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetDescRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Result res = 6;
  if (this->has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->res_, deterministic, target);
  }

  // string sdp = 7;
  if (this->sdp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdp().data(), static_cast<int>(this->sdp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SetDescRes.sdp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sdp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetDescRes)
  return target;
}

size_t SetDescRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetDescRes)
  size_t total_size = 0;

  // string sdp = 7;
  if (this->sdp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdp());
  }

  // .Result res = 6;
  if (this->has_res()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetDescRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetDescRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDescRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetDescRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetDescRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetDescRes)
    MergeFrom(*source);
  }
}

void SetDescRes::MergeFrom(const SetDescRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetDescRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sdp().size() > 0) {

    sdp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdp_);
  }
  if (from.has_res()) {
    mutable_res()->::Result::MergeFrom(from.res());
  }
}

void SetDescRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetDescRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDescRes::CopyFrom(const SetDescRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetDescRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDescRes::IsInitialized() const {
  return true;
}

void SetDescRes::Swap(SetDescRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetDescRes::InternalSwap(SetDescRes* other) {
  sdp_.Swap(&other->sdp_);
  std::swap(res_, other->res_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetDescRes::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetDescRes

// .Result res = 6;
bool SetDescRes::has_res() const {
  return this != internal_default_instance() && res_ != NULL;
}
void SetDescRes::clear_res() {
  if (GetArenaNoVirtual() == NULL && res_ != NULL) delete res_;
  res_ = NULL;
}
const ::Result& SetDescRes::res() const {
  // @@protoc_insertion_point(field_get:SetDescRes.res)
  return res_ != NULL ? *res_
                         : *::Result::internal_default_instance();
}
::Result* SetDescRes::mutable_res() {
  
  if (res_ == NULL) {
    res_ = new ::Result;
  }
  // @@protoc_insertion_point(field_mutable:SetDescRes.res)
  return res_;
}
::Result* SetDescRes::release_res() {
  // @@protoc_insertion_point(field_release:SetDescRes.res)
  
  ::Result* temp = res_;
  res_ = NULL;
  return temp;
}
void SetDescRes::set_allocated_res(::Result* res) {
  delete res_;
  res_ = res;
  if (res) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SetDescRes.res)
}

// string sdp = 7;
void SetDescRes::clear_sdp() {
  sdp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetDescRes::sdp() const {
  // @@protoc_insertion_point(field_get:SetDescRes.sdp)
  return sdp_.GetNoArena();
}
void SetDescRes::set_sdp(const ::std::string& value) {
  
  sdp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetDescRes.sdp)
}
#if LANG_CXX11
void SetDescRes::set_sdp(::std::string&& value) {
  
  sdp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetDescRes.sdp)
}
#endif
void SetDescRes::set_sdp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sdp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetDescRes.sdp)
}
void SetDescRes::set_sdp(const char* value, size_t size) {
  
  sdp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetDescRes.sdp)
}
::std::string* SetDescRes::mutable_sdp() {
  
  // @@protoc_insertion_point(field_mutable:SetDescRes.sdp)
  return sdp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetDescRes::release_sdp() {
  // @@protoc_insertion_point(field_release:SetDescRes.sdp)
  
  return sdp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetDescRes::set_allocated_sdp(::std::string* sdp) {
  if (sdp != NULL) {
    
  } else {
    
  }
  sdp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdp);
  // @@protoc_insertion_point(field_set_allocated:SetDescRes.sdp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfferAnswerReq::kPcidFieldNumber;
const int OfferAnswerReq::kAudioFieldNumber;
const int OfferAnswerReq::kVideoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfferAnswerReq::OfferAnswerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfferAnswerReq)
}
OfferAnswerReq::OfferAnswerReq(const OfferAnswerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&audio_, &from.audio_,
    static_cast<size_t>(reinterpret_cast<char*>(&pcid_) -
    reinterpret_cast<char*>(&audio_)) + sizeof(pcid_));
  // @@protoc_insertion_point(copy_constructor:OfferAnswerReq)
}

void OfferAnswerReq::SharedCtor() {
  ::memset(&audio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pcid_) -
      reinterpret_cast<char*>(&audio_)) + sizeof(pcid_));
  _cached_size_ = 0;
}

OfferAnswerReq::~OfferAnswerReq() {
  // @@protoc_insertion_point(destructor:OfferAnswerReq)
  SharedDtor();
}

void OfferAnswerReq::SharedDtor() {
}

void OfferAnswerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfferAnswerReq::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfferAnswerReq& OfferAnswerReq::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

OfferAnswerReq* OfferAnswerReq::New(::google::protobuf::Arena* arena) const {
  OfferAnswerReq* n = new OfferAnswerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfferAnswerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:OfferAnswerReq)
  ::memset(&audio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pcid_) -
      reinterpret_cast<char*>(&audio_)) + sizeof(pcid_));
}

bool OfferAnswerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OfferAnswerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 pcid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool audio = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &audio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool video = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &video_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OfferAnswerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OfferAnswerReq)
  return false;
#undef DO_
}

void OfferAnswerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OfferAnswerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pcid = 8;
  if (this->pcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->pcid(), output);
  }

  // bool audio = 9;
  if (this->audio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->audio(), output);
  }

  // bool video = 10;
  if (this->video() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->video(), output);
  }

  // @@protoc_insertion_point(serialize_end:OfferAnswerReq)
}

::google::protobuf::uint8* OfferAnswerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OfferAnswerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pcid = 8;
  if (this->pcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->pcid(), target);
  }

  // bool audio = 9;
  if (this->audio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->audio(), target);
  }

  // bool video = 10;
  if (this->video() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->video(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:OfferAnswerReq)
  return target;
}

size_t OfferAnswerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfferAnswerReq)
  size_t total_size = 0;

  // bool audio = 9;
  if (this->audio() != 0) {
    total_size += 1 + 1;
  }

  // bool video = 10;
  if (this->video() != 0) {
    total_size += 1 + 1;
  }

  // uint64 pcid = 8;
  if (this->pcid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pcid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfferAnswerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfferAnswerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const OfferAnswerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfferAnswerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfferAnswerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfferAnswerReq)
    MergeFrom(*source);
  }
}

void OfferAnswerReq::MergeFrom(const OfferAnswerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfferAnswerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio() != 0) {
    set_audio(from.audio());
  }
  if (from.video() != 0) {
    set_video(from.video());
  }
  if (from.pcid() != 0) {
    set_pcid(from.pcid());
  }
}

void OfferAnswerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfferAnswerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfferAnswerReq::CopyFrom(const OfferAnswerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfferAnswerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfferAnswerReq::IsInitialized() const {
  return true;
}

void OfferAnswerReq::Swap(OfferAnswerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfferAnswerReq::InternalSwap(OfferAnswerReq* other) {
  std::swap(audio_, other->audio_);
  std::swap(video_, other->video_);
  std::swap(pcid_, other->pcid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfferAnswerReq::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfferAnswerReq

// uint64 pcid = 8;
void OfferAnswerReq::clear_pcid() {
  pcid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OfferAnswerReq::pcid() const {
  // @@protoc_insertion_point(field_get:OfferAnswerReq.pcid)
  return pcid_;
}
void OfferAnswerReq::set_pcid(::google::protobuf::uint64 value) {
  
  pcid_ = value;
  // @@protoc_insertion_point(field_set:OfferAnswerReq.pcid)
}

// bool audio = 9;
void OfferAnswerReq::clear_audio() {
  audio_ = false;
}
bool OfferAnswerReq::audio() const {
  // @@protoc_insertion_point(field_get:OfferAnswerReq.audio)
  return audio_;
}
void OfferAnswerReq::set_audio(bool value) {
  
  audio_ = value;
  // @@protoc_insertion_point(field_set:OfferAnswerReq.audio)
}

// bool video = 10;
void OfferAnswerReq::clear_video() {
  video_ = false;
}
bool OfferAnswerReq::video() const {
  // @@protoc_insertion_point(field_get:OfferAnswerReq.video)
  return video_;
}
void OfferAnswerReq::set_video(bool value) {
  
  video_ = value;
  // @@protoc_insertion_point(field_set:OfferAnswerReq.video)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfferAnswerRes::kResFieldNumber;
const int OfferAnswerRes::kSdpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfferAnswerRes::OfferAnswerRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OfferAnswerRes)
}
OfferAnswerRes::OfferAnswerRes(const OfferAnswerRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sdp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdp().size() > 0) {
    sdp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdp_);
  }
  if (from.has_res()) {
    res_ = new ::Result(*from.res_);
  } else {
    res_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:OfferAnswerRes)
}

void OfferAnswerRes::SharedCtor() {
  sdp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_ = NULL;
  _cached_size_ = 0;
}

OfferAnswerRes::~OfferAnswerRes() {
  // @@protoc_insertion_point(destructor:OfferAnswerRes)
  SharedDtor();
}

void OfferAnswerRes::SharedDtor() {
  sdp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete res_;
  }
}

void OfferAnswerRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfferAnswerRes::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfferAnswerRes& OfferAnswerRes::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

OfferAnswerRes* OfferAnswerRes::New(::google::protobuf::Arena* arena) const {
  OfferAnswerRes* n = new OfferAnswerRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfferAnswerRes::Clear() {
// @@protoc_insertion_point(message_clear_start:OfferAnswerRes)
  sdp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && res_ != NULL) {
    delete res_;
  }
  res_ = NULL;
}

bool OfferAnswerRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OfferAnswerRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Result res = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sdp = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdp().data(), static_cast<int>(this->sdp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "OfferAnswerRes.sdp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OfferAnswerRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OfferAnswerRes)
  return false;
#undef DO_
}

void OfferAnswerRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OfferAnswerRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Result res = 11;
  if (this->has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->res_, output);
  }

  // string sdp = 12;
  if (this->sdp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdp().data(), static_cast<int>(this->sdp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "OfferAnswerRes.sdp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->sdp(), output);
  }

  // @@protoc_insertion_point(serialize_end:OfferAnswerRes)
}

::google::protobuf::uint8* OfferAnswerRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OfferAnswerRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Result res = 11;
  if (this->has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->res_, deterministic, target);
  }

  // string sdp = 12;
  if (this->sdp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdp().data(), static_cast<int>(this->sdp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "OfferAnswerRes.sdp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->sdp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:OfferAnswerRes)
  return target;
}

size_t OfferAnswerRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OfferAnswerRes)
  size_t total_size = 0;

  // string sdp = 12;
  if (this->sdp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdp());
  }

  // .Result res = 11;
  if (this->has_res()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfferAnswerRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OfferAnswerRes)
  GOOGLE_DCHECK_NE(&from, this);
  const OfferAnswerRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfferAnswerRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OfferAnswerRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OfferAnswerRes)
    MergeFrom(*source);
  }
}

void OfferAnswerRes::MergeFrom(const OfferAnswerRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OfferAnswerRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sdp().size() > 0) {

    sdp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdp_);
  }
  if (from.has_res()) {
    mutable_res()->::Result::MergeFrom(from.res());
  }
}

void OfferAnswerRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OfferAnswerRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfferAnswerRes::CopyFrom(const OfferAnswerRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OfferAnswerRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfferAnswerRes::IsInitialized() const {
  return true;
}

void OfferAnswerRes::Swap(OfferAnswerRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfferAnswerRes::InternalSwap(OfferAnswerRes* other) {
  sdp_.Swap(&other->sdp_);
  std::swap(res_, other->res_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfferAnswerRes::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfferAnswerRes

// .Result res = 11;
bool OfferAnswerRes::has_res() const {
  return this != internal_default_instance() && res_ != NULL;
}
void OfferAnswerRes::clear_res() {
  if (GetArenaNoVirtual() == NULL && res_ != NULL) delete res_;
  res_ = NULL;
}
const ::Result& OfferAnswerRes::res() const {
  // @@protoc_insertion_point(field_get:OfferAnswerRes.res)
  return res_ != NULL ? *res_
                         : *::Result::internal_default_instance();
}
::Result* OfferAnswerRes::mutable_res() {
  
  if (res_ == NULL) {
    res_ = new ::Result;
  }
  // @@protoc_insertion_point(field_mutable:OfferAnswerRes.res)
  return res_;
}
::Result* OfferAnswerRes::release_res() {
  // @@protoc_insertion_point(field_release:OfferAnswerRes.res)
  
  ::Result* temp = res_;
  res_ = NULL;
  return temp;
}
void OfferAnswerRes::set_allocated_res(::Result* res) {
  delete res_;
  res_ = res;
  if (res) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:OfferAnswerRes.res)
}

// string sdp = 12;
void OfferAnswerRes::clear_sdp() {
  sdp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OfferAnswerRes::sdp() const {
  // @@protoc_insertion_point(field_get:OfferAnswerRes.sdp)
  return sdp_.GetNoArena();
}
void OfferAnswerRes::set_sdp(const ::std::string& value) {
  
  sdp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OfferAnswerRes.sdp)
}
#if LANG_CXX11
void OfferAnswerRes::set_sdp(::std::string&& value) {
  
  sdp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OfferAnswerRes.sdp)
}
#endif
void OfferAnswerRes::set_sdp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sdp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OfferAnswerRes.sdp)
}
void OfferAnswerRes::set_sdp(const char* value, size_t size) {
  
  sdp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OfferAnswerRes.sdp)
}
::std::string* OfferAnswerRes::mutable_sdp() {
  
  // @@protoc_insertion_point(field_mutable:OfferAnswerRes.sdp)
  return sdp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OfferAnswerRes::release_sdp() {
  // @@protoc_insertion_point(field_release:OfferAnswerRes.sdp)
  
  return sdp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OfferAnswerRes::set_allocated_sdp(::std::string* sdp) {
  if (sdp != NULL) {
    
  } else {
    
  }
  sdp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdp);
  // @@protoc_insertion_point(field_set_allocated:OfferAnswerRes.sdp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackSrc::kTsidFieldNumber;
const int TrackSrc::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackSrc::TrackSrc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrackSrc)
}
TrackSrc::TrackSrc(const TrackSrc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&tsid_) -
    reinterpret_cast<char*>(&type_)) + sizeof(tsid_));
  // @@protoc_insertion_point(copy_constructor:TrackSrc)
}

void TrackSrc::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tsid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(tsid_));
  _cached_size_ = 0;
}

TrackSrc::~TrackSrc() {
  // @@protoc_insertion_point(destructor:TrackSrc)
  SharedDtor();
}

void TrackSrc::SharedDtor() {
}

void TrackSrc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrackSrc::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrackSrc& TrackSrc::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrackSrc* TrackSrc::New(::google::protobuf::Arena* arena) const {
  TrackSrc* n = new TrackSrc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrackSrc::Clear() {
// @@protoc_insertion_point(message_clear_start:TrackSrc)
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tsid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(tsid_));
}

bool TrackSrc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrackSrc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 tsid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TrackType type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::TrackType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrackSrc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrackSrc)
  return false;
#undef DO_
}

void TrackSrc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrackSrc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 tsid = 13;
  if (this->tsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->tsid(), output);
  }

  // .TrackType type = 14;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:TrackSrc)
}

::google::protobuf::uint8* TrackSrc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TrackSrc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 tsid = 13;
  if (this->tsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->tsid(), target);
  }

  // .TrackType type = 14;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TrackSrc)
  return target;
}

size_t TrackSrc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrackSrc)
  size_t total_size = 0;

  // .TrackType type = 14;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint64 tsid = 13;
  if (this->tsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tsid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrackSrc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrackSrc)
  GOOGLE_DCHECK_NE(&from, this);
  const TrackSrc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrackSrc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrackSrc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrackSrc)
    MergeFrom(*source);
  }
}

void TrackSrc::MergeFrom(const TrackSrc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrackSrc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.tsid() != 0) {
    set_tsid(from.tsid());
  }
}

void TrackSrc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrackSrc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackSrc::CopyFrom(const TrackSrc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrackSrc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackSrc::IsInitialized() const {
  return true;
}

void TrackSrc::Swap(TrackSrc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackSrc::InternalSwap(TrackSrc* other) {
  std::swap(type_, other->type_);
  std::swap(tsid_, other->tsid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrackSrc::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrackSrc

// uint64 tsid = 13;
void TrackSrc::clear_tsid() {
  tsid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TrackSrc::tsid() const {
  // @@protoc_insertion_point(field_get:TrackSrc.tsid)
  return tsid_;
}
void TrackSrc::set_tsid(::google::protobuf::uint64 value) {
  
  tsid_ = value;
  // @@protoc_insertion_point(field_set:TrackSrc.tsid)
}

// .TrackType type = 14;
void TrackSrc::clear_type() {
  type_ = 0;
}
::TrackType TrackSrc::type() const {
  // @@protoc_insertion_point(field_get:TrackSrc.type)
  return static_cast< ::TrackType >(type_);
}
void TrackSrc::set_type(::TrackType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:TrackSrc.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewUrlTracksReq::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewUrlTracksReq::NewUrlTracksReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NewUrlTracksReq)
}
NewUrlTracksReq::NewUrlTracksReq(const NewUrlTracksReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  // @@protoc_insertion_point(copy_constructor:NewUrlTracksReq)
}

void NewUrlTracksReq::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

NewUrlTracksReq::~NewUrlTracksReq() {
  // @@protoc_insertion_point(destructor:NewUrlTracksReq)
  SharedDtor();
}

void NewUrlTracksReq::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NewUrlTracksReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewUrlTracksReq::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewUrlTracksReq& NewUrlTracksReq::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewUrlTracksReq* NewUrlTracksReq::New(::google::protobuf::Arena* arena) const {
  NewUrlTracksReq* n = new NewUrlTracksReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewUrlTracksReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NewUrlTracksReq)
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NewUrlTracksReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NewUrlTracksReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NewUrlTracksReq.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NewUrlTracksReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NewUrlTracksReq)
  return false;
#undef DO_
}

void NewUrlTracksReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NewUrlTracksReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 15;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NewUrlTracksReq.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->url(), output);
  }

  // @@protoc_insertion_point(serialize_end:NewUrlTracksReq)
}

::google::protobuf::uint8* NewUrlTracksReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NewUrlTracksReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 15;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NewUrlTracksReq.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->url(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NewUrlTracksReq)
  return target;
}

size_t NewUrlTracksReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NewUrlTracksReq)
  size_t total_size = 0;

  // string url = 15;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewUrlTracksReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NewUrlTracksReq)
  GOOGLE_DCHECK_NE(&from, this);
  const NewUrlTracksReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewUrlTracksReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NewUrlTracksReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NewUrlTracksReq)
    MergeFrom(*source);
  }
}

void NewUrlTracksReq::MergeFrom(const NewUrlTracksReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NewUrlTracksReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void NewUrlTracksReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NewUrlTracksReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewUrlTracksReq::CopyFrom(const NewUrlTracksReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NewUrlTracksReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewUrlTracksReq::IsInitialized() const {
  return true;
}

void NewUrlTracksReq::Swap(NewUrlTracksReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewUrlTracksReq::InternalSwap(NewUrlTracksReq* other) {
  url_.Swap(&other->url_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewUrlTracksReq::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewUrlTracksReq

// string url = 15;
void NewUrlTracksReq::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NewUrlTracksReq::url() const {
  // @@protoc_insertion_point(field_get:NewUrlTracksReq.url)
  return url_.GetNoArena();
}
void NewUrlTracksReq::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NewUrlTracksReq.url)
}
#if LANG_CXX11
void NewUrlTracksReq::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NewUrlTracksReq.url)
}
#endif
void NewUrlTracksReq::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NewUrlTracksReq.url)
}
void NewUrlTracksReq::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NewUrlTracksReq.url)
}
::std::string* NewUrlTracksReq::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:NewUrlTracksReq.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewUrlTracksReq::release_url() {
  // @@protoc_insertion_point(field_release:NewUrlTracksReq.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewUrlTracksReq::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:NewUrlTracksReq.url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewUrlTracksRes::kResFieldNumber;
const int NewUrlTracksRes::kTrackSrcsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewUrlTracksRes::NewUrlTracksRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NewUrlTracksRes)
}
NewUrlTracksRes::NewUrlTracksRes(const NewUrlTracksRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tracksrcs_(from.tracksrcs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_res()) {
    res_ = new ::Result(*from.res_);
  } else {
    res_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NewUrlTracksRes)
}

void NewUrlTracksRes::SharedCtor() {
  res_ = NULL;
  _cached_size_ = 0;
}

NewUrlTracksRes::~NewUrlTracksRes() {
  // @@protoc_insertion_point(destructor:NewUrlTracksRes)
  SharedDtor();
}

void NewUrlTracksRes::SharedDtor() {
  if (this != internal_default_instance()) {
    delete res_;
  }
}

void NewUrlTracksRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewUrlTracksRes::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewUrlTracksRes& NewUrlTracksRes::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewUrlTracksRes* NewUrlTracksRes::New(::google::protobuf::Arena* arena) const {
  NewUrlTracksRes* n = new NewUrlTracksRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewUrlTracksRes::Clear() {
// @@protoc_insertion_point(message_clear_start:NewUrlTracksRes)
  tracksrcs_.Clear();
  if (GetArenaNoVirtual() == NULL && res_ != NULL) {
    delete res_;
  }
  res_ = NULL;
}

bool NewUrlTracksRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NewUrlTracksRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Result res = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TrackSrc trackSrcs = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tracksrcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NewUrlTracksRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NewUrlTracksRes)
  return false;
#undef DO_
}

void NewUrlTracksRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NewUrlTracksRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Result res = 16;
  if (this->has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->res_, output);
  }

  // repeated .TrackSrc trackSrcs = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tracksrcs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->tracksrcs(static_cast<int>(i)), output);
  }

  // @@protoc_insertion_point(serialize_end:NewUrlTracksRes)
}

::google::protobuf::uint8* NewUrlTracksRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NewUrlTracksRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Result res = 16;
  if (this->has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->res_, deterministic, target);
  }

  // repeated .TrackSrc trackSrcs = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tracksrcs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, this->tracksrcs(static_cast<int>(i)), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NewUrlTracksRes)
  return target;
}

size_t NewUrlTracksRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NewUrlTracksRes)
  size_t total_size = 0;

  // repeated .TrackSrc trackSrcs = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->tracksrcs_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tracksrcs(static_cast<int>(i)));
    }
  }

  // .Result res = 16;
  if (this->has_res()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewUrlTracksRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NewUrlTracksRes)
  GOOGLE_DCHECK_NE(&from, this);
  const NewUrlTracksRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewUrlTracksRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NewUrlTracksRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NewUrlTracksRes)
    MergeFrom(*source);
  }
}

void NewUrlTracksRes::MergeFrom(const NewUrlTracksRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NewUrlTracksRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tracksrcs_.MergeFrom(from.tracksrcs_);
  if (from.has_res()) {
    mutable_res()->::Result::MergeFrom(from.res());
  }
}

void NewUrlTracksRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NewUrlTracksRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewUrlTracksRes::CopyFrom(const NewUrlTracksRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NewUrlTracksRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewUrlTracksRes::IsInitialized() const {
  return true;
}

void NewUrlTracksRes::Swap(NewUrlTracksRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewUrlTracksRes::InternalSwap(NewUrlTracksRes* other) {
  tracksrcs_.InternalSwap(&other->tracksrcs_);
  std::swap(res_, other->res_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewUrlTracksRes::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewUrlTracksRes

// .Result res = 16;
bool NewUrlTracksRes::has_res() const {
  return this != internal_default_instance() && res_ != NULL;
}
void NewUrlTracksRes::clear_res() {
  if (GetArenaNoVirtual() == NULL && res_ != NULL) delete res_;
  res_ = NULL;
}
const ::Result& NewUrlTracksRes::res() const {
  // @@protoc_insertion_point(field_get:NewUrlTracksRes.res)
  return res_ != NULL ? *res_
                         : *::Result::internal_default_instance();
}
::Result* NewUrlTracksRes::mutable_res() {
  
  if (res_ == NULL) {
    res_ = new ::Result;
  }
  // @@protoc_insertion_point(field_mutable:NewUrlTracksRes.res)
  return res_;
}
::Result* NewUrlTracksRes::release_res() {
  // @@protoc_insertion_point(field_release:NewUrlTracksRes.res)
  
  ::Result* temp = res_;
  res_ = NULL;
  return temp;
}
void NewUrlTracksRes::set_allocated_res(::Result* res) {
  delete res_;
  res_ = res;
  if (res) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NewUrlTracksRes.res)
}

// repeated .TrackSrc trackSrcs = 17;
int NewUrlTracksRes::tracksrcs_size() const {
  return tracksrcs_.size();
}
void NewUrlTracksRes::clear_tracksrcs() {
  tracksrcs_.Clear();
}
const ::TrackSrc& NewUrlTracksRes::tracksrcs(int index) const {
  // @@protoc_insertion_point(field_get:NewUrlTracksRes.trackSrcs)
  return tracksrcs_.Get(index);
}
::TrackSrc* NewUrlTracksRes::mutable_tracksrcs(int index) {
  // @@protoc_insertion_point(field_mutable:NewUrlTracksRes.trackSrcs)
  return tracksrcs_.Mutable(index);
}
::TrackSrc* NewUrlTracksRes::add_tracksrcs() {
  // @@protoc_insertion_point(field_add:NewUrlTracksRes.trackSrcs)
  return tracksrcs_.Add();
}
::google::protobuf::RepeatedPtrField< ::TrackSrc >*
NewUrlTracksRes::mutable_tracksrcs() {
  // @@protoc_insertion_point(field_mutable_list:NewUrlTracksRes.trackSrcs)
  return &tracksrcs_;
}
const ::google::protobuf::RepeatedPtrField< ::TrackSrc >&
NewUrlTracksRes::tracksrcs() const {
  // @@protoc_insertion_point(field_list:NewUrlTracksRes.trackSrcs)
  return tracksrcs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewTrackSrcsRes::kResFieldNumber;
const int NewTrackSrcsRes::kTrackSrcsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewTrackSrcsRes::NewTrackSrcsRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NewTrackSrcsRes)
}
NewTrackSrcsRes::NewTrackSrcsRes(const NewTrackSrcsRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tracksrcs_(from.tracksrcs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_res()) {
    res_ = new ::Result(*from.res_);
  } else {
    res_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NewTrackSrcsRes)
}

void NewTrackSrcsRes::SharedCtor() {
  res_ = NULL;
  _cached_size_ = 0;
}

NewTrackSrcsRes::~NewTrackSrcsRes() {
  // @@protoc_insertion_point(destructor:NewTrackSrcsRes)
  SharedDtor();
}

void NewTrackSrcsRes::SharedDtor() {
  if (this != internal_default_instance()) {
    delete res_;
  }
}

void NewTrackSrcsRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewTrackSrcsRes::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewTrackSrcsRes& NewTrackSrcsRes::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewTrackSrcsRes* NewTrackSrcsRes::New(::google::protobuf::Arena* arena) const {
  NewTrackSrcsRes* n = new NewTrackSrcsRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewTrackSrcsRes::Clear() {
// @@protoc_insertion_point(message_clear_start:NewTrackSrcsRes)
  tracksrcs_.Clear();
  if (GetArenaNoVirtual() == NULL && res_ != NULL) {
    delete res_;
  }
  res_ = NULL;
}

bool NewTrackSrcsRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NewTrackSrcsRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Result res = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TrackSrc trackSrcs = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tracksrcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NewTrackSrcsRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NewTrackSrcsRes)
  return false;
#undef DO_
}

void NewTrackSrcsRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NewTrackSrcsRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Result res = 18;
  if (this->has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->res_, output);
  }

  // repeated .TrackSrc trackSrcs = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tracksrcs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->tracksrcs(static_cast<int>(i)), output);
  }

  // @@protoc_insertion_point(serialize_end:NewTrackSrcsRes)
}

::google::protobuf::uint8* NewTrackSrcsRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NewTrackSrcsRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Result res = 18;
  if (this->has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->res_, deterministic, target);
  }

  // repeated .TrackSrc trackSrcs = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tracksrcs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, this->tracksrcs(static_cast<int>(i)), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NewTrackSrcsRes)
  return target;
}

size_t NewTrackSrcsRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NewTrackSrcsRes)
  size_t total_size = 0;

  // repeated .TrackSrc trackSrcs = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->tracksrcs_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tracksrcs(static_cast<int>(i)));
    }
  }

  // .Result res = 18;
  if (this->has_res()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewTrackSrcsRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NewTrackSrcsRes)
  GOOGLE_DCHECK_NE(&from, this);
  const NewTrackSrcsRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewTrackSrcsRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NewTrackSrcsRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NewTrackSrcsRes)
    MergeFrom(*source);
  }
}

void NewTrackSrcsRes::MergeFrom(const NewTrackSrcsRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NewTrackSrcsRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tracksrcs_.MergeFrom(from.tracksrcs_);
  if (from.has_res()) {
    mutable_res()->::Result::MergeFrom(from.res());
  }
}

void NewTrackSrcsRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NewTrackSrcsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewTrackSrcsRes::CopyFrom(const NewTrackSrcsRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NewTrackSrcsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewTrackSrcsRes::IsInitialized() const {
  return true;
}

void NewTrackSrcsRes::Swap(NewTrackSrcsRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewTrackSrcsRes::InternalSwap(NewTrackSrcsRes* other) {
  tracksrcs_.InternalSwap(&other->tracksrcs_);
  std::swap(res_, other->res_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewTrackSrcsRes::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewTrackSrcsRes

// .Result res = 18;
bool NewTrackSrcsRes::has_res() const {
  return this != internal_default_instance() && res_ != NULL;
}
void NewTrackSrcsRes::clear_res() {
  if (GetArenaNoVirtual() == NULL && res_ != NULL) delete res_;
  res_ = NULL;
}
const ::Result& NewTrackSrcsRes::res() const {
  // @@protoc_insertion_point(field_get:NewTrackSrcsRes.res)
  return res_ != NULL ? *res_
                         : *::Result::internal_default_instance();
}
::Result* NewTrackSrcsRes::mutable_res() {
  
  if (res_ == NULL) {
    res_ = new ::Result;
  }
  // @@protoc_insertion_point(field_mutable:NewTrackSrcsRes.res)
  return res_;
}
::Result* NewTrackSrcsRes::release_res() {
  // @@protoc_insertion_point(field_release:NewTrackSrcsRes.res)
  
  ::Result* temp = res_;
  res_ = NULL;
  return temp;
}
void NewTrackSrcsRes::set_allocated_res(::Result* res) {
  delete res_;
  res_ = res;
  if (res) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NewTrackSrcsRes.res)
}

// repeated .TrackSrc trackSrcs = 19;
int NewTrackSrcsRes::tracksrcs_size() const {
  return tracksrcs_.size();
}
void NewTrackSrcsRes::clear_tracksrcs() {
  tracksrcs_.Clear();
}
const ::TrackSrc& NewTrackSrcsRes::tracksrcs(int index) const {
  // @@protoc_insertion_point(field_get:NewTrackSrcsRes.trackSrcs)
  return tracksrcs_.Get(index);
}
::TrackSrc* NewTrackSrcsRes::mutable_tracksrcs(int index) {
  // @@protoc_insertion_point(field_mutable:NewTrackSrcsRes.trackSrcs)
  return tracksrcs_.Mutable(index);
}
::TrackSrc* NewTrackSrcsRes::add_tracksrcs() {
  // @@protoc_insertion_point(field_add:NewTrackSrcsRes.trackSrcs)
  return tracksrcs_.Add();
}
::google::protobuf::RepeatedPtrField< ::TrackSrc >*
NewTrackSrcsRes::mutable_tracksrcs() {
  // @@protoc_insertion_point(field_mutable_list:NewTrackSrcsRes.trackSrcs)
  return &tracksrcs_;
}
const ::google::protobuf::RepeatedPtrField< ::TrackSrc >&
NewTrackSrcsRes::tracksrcs() const {
  // @@protoc_insertion_point(field_list:NewTrackSrcsRes.trackSrcs)
  return tracksrcs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Frag::kOffFieldNumber;
const int Frag::kLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Frag::Frag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Frag)
}
Frag::Frag(const Frag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&off_, &from.off_,
    static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&off_)) + sizeof(len_));
  // @@protoc_insertion_point(copy_constructor:Frag)
}

void Frag::SharedCtor() {
  ::memset(&off_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&off_)) + sizeof(len_));
  _cached_size_ = 0;
}

Frag::~Frag() {
  // @@protoc_insertion_point(destructor:Frag)
  SharedDtor();
}

void Frag::SharedDtor() {
}

void Frag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Frag::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Frag& Frag::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

Frag* Frag::New(::google::protobuf::Arena* arena) const {
  Frag* n = new Frag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Frag::Clear() {
// @@protoc_insertion_point(message_clear_start:Frag)
  ::memset(&off_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&off_)) + sizeof(len_));
}

bool Frag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Frag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 off = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &off_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 len = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Frag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Frag)
  return false;
#undef DO_
}

void Frag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Frag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 off = 20;
  if (this->off() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(20, this->off(), output);
  }

  // uint64 len = 21;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(21, this->len(), output);
  }

  // @@protoc_insertion_point(serialize_end:Frag)
}

::google::protobuf::uint8* Frag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Frag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 off = 20;
  if (this->off() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(20, this->off(), target);
  }

  // uint64 len = 21;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(21, this->len(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Frag)
  return target;
}

size_t Frag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Frag)
  size_t total_size = 0;

  // uint64 off = 20;
  if (this->off() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->off());
  }

  // uint64 len = 21;
  if (this->len() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Frag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Frag)
  GOOGLE_DCHECK_NE(&from, this);
  const Frag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Frag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Frag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Frag)
    MergeFrom(*source);
  }
}

void Frag::MergeFrom(const Frag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Frag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.off() != 0) {
    set_off(from.off());
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
}

void Frag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Frag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Frag::CopyFrom(const Frag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Frag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Frag::IsInitialized() const {
  return true;
}

void Frag::Swap(Frag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Frag::InternalSwap(Frag* other) {
  std::swap(off_, other->off_);
  std::swap(len_, other->len_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Frag::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Frag

// uint64 off = 20;
void Frag::clear_off() {
  off_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Frag::off() const {
  // @@protoc_insertion_point(field_get:Frag.off)
  return off_;
}
void Frag::set_off(::google::protobuf::uint64 value) {
  
  off_ = value;
  // @@protoc_insertion_point(field_set:Frag.off)
}

// uint64 len = 21;
void Frag::clear_len() {
  len_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Frag::len() const {
  // @@protoc_insertion_point(field_get:Frag.len)
  return len_;
}
void Frag::set_len(::google::protobuf::uint64 value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:Frag.len)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackSrcSendPacketReq::kTsidFieldNumber;
const int TrackSrcSendPacketReq::kPktFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackSrcSendPacketReq::TrackSrcSendPacketReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrackSrcSendPacketReq)
}
TrackSrcSendPacketReq::TrackSrcSendPacketReq(const TrackSrcSendPacketReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pkt()) {
    pkt_ = new ::Packet(*from.pkt_);
  } else {
    pkt_ = NULL;
  }
  tsid_ = from.tsid_;
  // @@protoc_insertion_point(copy_constructor:TrackSrcSendPacketReq)
}

void TrackSrcSendPacketReq::SharedCtor() {
  ::memset(&pkt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tsid_) -
      reinterpret_cast<char*>(&pkt_)) + sizeof(tsid_));
  _cached_size_ = 0;
}

TrackSrcSendPacketReq::~TrackSrcSendPacketReq() {
  // @@protoc_insertion_point(destructor:TrackSrcSendPacketReq)
  SharedDtor();
}

void TrackSrcSendPacketReq::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pkt_;
  }
}

void TrackSrcSendPacketReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrackSrcSendPacketReq::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrackSrcSendPacketReq& TrackSrcSendPacketReq::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrackSrcSendPacketReq* TrackSrcSendPacketReq::New(::google::protobuf::Arena* arena) const {
  TrackSrcSendPacketReq* n = new TrackSrcSendPacketReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrackSrcSendPacketReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TrackSrcSendPacketReq)
  if (GetArenaNoVirtual() == NULL && pkt_ != NULL) {
    delete pkt_;
  }
  pkt_ = NULL;
  tsid_ = GOOGLE_ULONGLONG(0);
}

bool TrackSrcSendPacketReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrackSrcSendPacketReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 tsid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Packet pkt = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pkt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrackSrcSendPacketReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrackSrcSendPacketReq)
  return false;
#undef DO_
}

void TrackSrcSendPacketReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrackSrcSendPacketReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 tsid = 21;
  if (this->tsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(21, this->tsid(), output);
  }

  // .Packet pkt = 22;
  if (this->has_pkt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->pkt_, output);
  }

  // @@protoc_insertion_point(serialize_end:TrackSrcSendPacketReq)
}

::google::protobuf::uint8* TrackSrcSendPacketReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TrackSrcSendPacketReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 tsid = 21;
  if (this->tsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(21, this->tsid(), target);
  }

  // .Packet pkt = 22;
  if (this->has_pkt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->pkt_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TrackSrcSendPacketReq)
  return target;
}

size_t TrackSrcSendPacketReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TrackSrcSendPacketReq)
  size_t total_size = 0;

  // .Packet pkt = 22;
  if (this->has_pkt()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pkt_);
  }

  // uint64 tsid = 21;
  if (this->tsid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tsid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrackSrcSendPacketReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TrackSrcSendPacketReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TrackSrcSendPacketReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrackSrcSendPacketReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TrackSrcSendPacketReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TrackSrcSendPacketReq)
    MergeFrom(*source);
  }
}

void TrackSrcSendPacketReq::MergeFrom(const TrackSrcSendPacketReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TrackSrcSendPacketReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pkt()) {
    mutable_pkt()->::Packet::MergeFrom(from.pkt());
  }
  if (from.tsid() != 0) {
    set_tsid(from.tsid());
  }
}

void TrackSrcSendPacketReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TrackSrcSendPacketReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackSrcSendPacketReq::CopyFrom(const TrackSrcSendPacketReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TrackSrcSendPacketReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackSrcSendPacketReq::IsInitialized() const {
  return true;
}

void TrackSrcSendPacketReq::Swap(TrackSrcSendPacketReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackSrcSendPacketReq::InternalSwap(TrackSrcSendPacketReq* other) {
  std::swap(pkt_, other->pkt_);
  std::swap(tsid_, other->tsid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrackSrcSendPacketReq::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrackSrcSendPacketReq

// uint64 tsid = 21;
void TrackSrcSendPacketReq::clear_tsid() {
  tsid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TrackSrcSendPacketReq::tsid() const {
  // @@protoc_insertion_point(field_get:TrackSrcSendPacketReq.tsid)
  return tsid_;
}
void TrackSrcSendPacketReq::set_tsid(::google::protobuf::uint64 value) {
  
  tsid_ = value;
  // @@protoc_insertion_point(field_set:TrackSrcSendPacketReq.tsid)
}

// .Packet pkt = 22;
bool TrackSrcSendPacketReq::has_pkt() const {
  return this != internal_default_instance() && pkt_ != NULL;
}
void TrackSrcSendPacketReq::clear_pkt() {
  if (GetArenaNoVirtual() == NULL && pkt_ != NULL) delete pkt_;
  pkt_ = NULL;
}
const ::Packet& TrackSrcSendPacketReq::pkt() const {
  // @@protoc_insertion_point(field_get:TrackSrcSendPacketReq.pkt)
  return pkt_ != NULL ? *pkt_
                         : *::Packet::internal_default_instance();
}
::Packet* TrackSrcSendPacketReq::mutable_pkt() {
  
  if (pkt_ == NULL) {
    pkt_ = new ::Packet;
  }
  // @@protoc_insertion_point(field_mutable:TrackSrcSendPacketReq.pkt)
  return pkt_;
}
::Packet* TrackSrcSendPacketReq::release_pkt() {
  // @@protoc_insertion_point(field_release:TrackSrcSendPacketReq.pkt)
  
  ::Packet* temp = pkt_;
  pkt_ = NULL;
  return temp;
}
void TrackSrcSendPacketReq::set_allocated_pkt(::Packet* pkt) {
  delete pkt_;
  pkt_ = pkt;
  if (pkt) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TrackSrcSendPacketReq.pkt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Packet::kTypeFieldNumber;
const int Packet::kBufFieldNumber;
const int Packet::kFragsFieldNumber;
const int Packet::kSampleRateFieldNumber;
const int Packet::kBitsPerSampleFieldNumber;
const int Packet::kNChannelsFieldNumber;
const int Packet::kNFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Packet::Packet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Packet)
}
Packet::Packet(const Packet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      frags_(from.frags_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buf().size() > 0) {
    buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf_);
  }
  ::memcpy(&nframes_, &from.nframes_,
    static_cast<size_t>(reinterpret_cast<char*>(&nchannels_) -
    reinterpret_cast<char*>(&nframes_)) + sizeof(nchannels_));
  // @@protoc_insertion_point(copy_constructor:Packet)
}

void Packet::SharedCtor() {
  buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nframes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nchannels_) -
      reinterpret_cast<char*>(&nframes_)) + sizeof(nchannels_));
  _cached_size_ = 0;
}

Packet::~Packet() {
  // @@protoc_insertion_point(destructor:Packet)
  SharedDtor();
}

void Packet::SharedDtor() {
  buf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Packet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Packet::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Packet& Packet::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

Packet* Packet::New(::google::protobuf::Arena* arena) const {
  Packet* n = new Packet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:Packet)
  frags_.Clear();
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nframes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nchannels_) -
      reinterpret_cast<char*>(&nframes_)) + sizeof(nchannels_));
}

bool Packet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Packet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TrackType type = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::TrackType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes buf = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Frag frags = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_frags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sampleRate = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &samplerate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bitsPerSample = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bitspersample_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nChannels = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nchannels_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nFrames = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nframes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Packet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Packet)
  return false;
#undef DO_
}

void Packet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TrackType type = 23;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      23, this->type(), output);
  }

  // bytes buf = 24;
  if (this->buf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      24, this->buf(), output);
  }

  // repeated .Frag frags = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->frags(static_cast<int>(i)), output);
  }

  // int32 sampleRate = 26;
  if (this->samplerate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->samplerate(), output);
  }

  // int32 bitsPerSample = 27;
  if (this->bitspersample() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->bitspersample(), output);
  }

  // int32 nChannels = 28;
  if (this->nchannels() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->nchannels(), output);
  }

  // int32 nFrames = 29;
  if (this->nframes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->nframes(), output);
  }

  // @@protoc_insertion_point(serialize_end:Packet)
}

::google::protobuf::uint8* Packet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TrackType type = 23;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      23, this->type(), target);
  }

  // bytes buf = 24;
  if (this->buf().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        24, this->buf(), target);
  }

  // repeated .Frag frags = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, this->frags(static_cast<int>(i)), deterministic, target);
  }

  // int32 sampleRate = 26;
  if (this->samplerate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->samplerate(), target);
  }

  // int32 bitsPerSample = 27;
  if (this->bitspersample() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->bitspersample(), target);
  }

  // int32 nChannels = 28;
  if (this->nchannels() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->nchannels(), target);
  }

  // int32 nFrames = 29;
  if (this->nframes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->nframes(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Packet)
  return target;
}

size_t Packet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Packet)
  size_t total_size = 0;

  // repeated .Frag frags = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->frags_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frags(static_cast<int>(i)));
    }
  }

  // bytes buf = 24;
  if (this->buf().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buf());
  }

  // int32 nFrames = 29;
  if (this->nframes() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nframes());
  }

  // .TrackType type = 23;
  if (this->type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 sampleRate = 26;
  if (this->samplerate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->samplerate());
  }

  // int32 bitsPerSample = 27;
  if (this->bitspersample() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bitspersample());
  }

  // int32 nChannels = 28;
  if (this->nchannels() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nchannels());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Packet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Packet)
  GOOGLE_DCHECK_NE(&from, this);
  const Packet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Packet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Packet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Packet)
    MergeFrom(*source);
  }
}

void Packet::MergeFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Packet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frags_.MergeFrom(from.frags_);
  if (from.buf().size() > 0) {

    buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf_);
  }
  if (from.nframes() != 0) {
    set_nframes(from.nframes());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.samplerate() != 0) {
    set_samplerate(from.samplerate());
  }
  if (from.bitspersample() != 0) {
    set_bitspersample(from.bitspersample());
  }
  if (from.nchannels() != 0) {
    set_nchannels(from.nchannels());
  }
}

void Packet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Packet::CopyFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Packet::IsInitialized() const {
  return true;
}

void Packet::Swap(Packet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Packet::InternalSwap(Packet* other) {
  frags_.InternalSwap(&other->frags_);
  buf_.Swap(&other->buf_);
  std::swap(nframes_, other->nframes_);
  std::swap(type_, other->type_);
  std::swap(samplerate_, other->samplerate_);
  std::swap(bitspersample_, other->bitspersample_);
  std::swap(nchannels_, other->nchannels_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Packet::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Packet

// .TrackType type = 23;
void Packet::clear_type() {
  type_ = 0;
}
::TrackType Packet::type() const {
  // @@protoc_insertion_point(field_get:Packet.type)
  return static_cast< ::TrackType >(type_);
}
void Packet::set_type(::TrackType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Packet.type)
}

// bytes buf = 24;
void Packet::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Packet::buf() const {
  // @@protoc_insertion_point(field_get:Packet.buf)
  return buf_.GetNoArena();
}
void Packet::set_buf(const ::std::string& value) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Packet.buf)
}
#if LANG_CXX11
void Packet::set_buf(::std::string&& value) {
  
  buf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Packet.buf)
}
#endif
void Packet::set_buf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Packet.buf)
}
void Packet::set_buf(const void* value, size_t size) {
  
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Packet.buf)
}
::std::string* Packet::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:Packet.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Packet::release_buf() {
  // @@protoc_insertion_point(field_release:Packet.buf)
  
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Packet::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:Packet.buf)
}

// repeated .Frag frags = 25;
int Packet::frags_size() const {
  return frags_.size();
}
void Packet::clear_frags() {
  frags_.Clear();
}
const ::Frag& Packet::frags(int index) const {
  // @@protoc_insertion_point(field_get:Packet.frags)
  return frags_.Get(index);
}
::Frag* Packet::mutable_frags(int index) {
  // @@protoc_insertion_point(field_mutable:Packet.frags)
  return frags_.Mutable(index);
}
::Frag* Packet::add_frags() {
  // @@protoc_insertion_point(field_add:Packet.frags)
  return frags_.Add();
}
::google::protobuf::RepeatedPtrField< ::Frag >*
Packet::mutable_frags() {
  // @@protoc_insertion_point(field_mutable_list:Packet.frags)
  return &frags_;
}
const ::google::protobuf::RepeatedPtrField< ::Frag >&
Packet::frags() const {
  // @@protoc_insertion_point(field_list:Packet.frags)
  return frags_;
}

// int32 sampleRate = 26;
void Packet::clear_samplerate() {
  samplerate_ = 0;
}
::google::protobuf::int32 Packet::samplerate() const {
  // @@protoc_insertion_point(field_get:Packet.sampleRate)
  return samplerate_;
}
void Packet::set_samplerate(::google::protobuf::int32 value) {
  
  samplerate_ = value;
  // @@protoc_insertion_point(field_set:Packet.sampleRate)
}

// int32 bitsPerSample = 27;
void Packet::clear_bitspersample() {
  bitspersample_ = 0;
}
::google::protobuf::int32 Packet::bitspersample() const {
  // @@protoc_insertion_point(field_get:Packet.bitsPerSample)
  return bitspersample_;
}
void Packet::set_bitspersample(::google::protobuf::int32 value) {
  
  bitspersample_ = value;
  // @@protoc_insertion_point(field_set:Packet.bitsPerSample)
}

// int32 nChannels = 28;
void Packet::clear_nchannels() {
  nchannels_ = 0;
}
::google::protobuf::int32 Packet::nchannels() const {
  // @@protoc_insertion_point(field_get:Packet.nChannels)
  return nchannels_;
}
void Packet::set_nchannels(::google::protobuf::int32 value) {
  
  nchannels_ = value;
  // @@protoc_insertion_point(field_set:Packet.nChannels)
}

// int32 nFrames = 29;
void Packet::clear_nframes() {
  nframes_ = 0;
}
::google::protobuf::int32 Packet::nframes() const {
  // @@protoc_insertion_point(field_get:Packet.nFrames)
  return nframes_;
}
void Packet::set_nframes(::google::protobuf::int32 value) {
  
  nframes_ = value;
  // @@protoc_insertion_point(field_set:Packet.nFrames)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnTrackPacketMsg::kPcidFieldNumber;
const int OnTrackPacketMsg::kPktFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnTrackPacketMsg::OnTrackPacketMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OnTrackPacketMsg)
}
OnTrackPacketMsg::OnTrackPacketMsg(const OnTrackPacketMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pkt()) {
    pkt_ = new ::Packet(*from.pkt_);
  } else {
    pkt_ = NULL;
  }
  pcid_ = from.pcid_;
  // @@protoc_insertion_point(copy_constructor:OnTrackPacketMsg)
}

void OnTrackPacketMsg::SharedCtor() {
  ::memset(&pkt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pcid_) -
      reinterpret_cast<char*>(&pkt_)) + sizeof(pcid_));
  _cached_size_ = 0;
}

OnTrackPacketMsg::~OnTrackPacketMsg() {
  // @@protoc_insertion_point(destructor:OnTrackPacketMsg)
  SharedDtor();
}

void OnTrackPacketMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pkt_;
  }
}

void OnTrackPacketMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnTrackPacketMsg::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnTrackPacketMsg& OnTrackPacketMsg::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

OnTrackPacketMsg* OnTrackPacketMsg::New(::google::protobuf::Arena* arena) const {
  OnTrackPacketMsg* n = new OnTrackPacketMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnTrackPacketMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:OnTrackPacketMsg)
  if (GetArenaNoVirtual() == NULL && pkt_ != NULL) {
    delete pkt_;
  }
  pkt_ = NULL;
  pcid_ = GOOGLE_ULONGLONG(0);
}

bool OnTrackPacketMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OnTrackPacketMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 pcid = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Packet pkt = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pkt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OnTrackPacketMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OnTrackPacketMsg)
  return false;
#undef DO_
}

void OnTrackPacketMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OnTrackPacketMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pcid = 30;
  if (this->pcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(30, this->pcid(), output);
  }

  // .Packet pkt = 31;
  if (this->has_pkt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, *this->pkt_, output);
  }

  // @@protoc_insertion_point(serialize_end:OnTrackPacketMsg)
}

::google::protobuf::uint8* OnTrackPacketMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OnTrackPacketMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pcid = 30;
  if (this->pcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(30, this->pcid(), target);
  }

  // .Packet pkt = 31;
  if (this->has_pkt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        31, *this->pkt_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:OnTrackPacketMsg)
  return target;
}

size_t OnTrackPacketMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OnTrackPacketMsg)
  size_t total_size = 0;

  // .Packet pkt = 31;
  if (this->has_pkt()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pkt_);
  }

  // uint64 pcid = 30;
  if (this->pcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pcid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnTrackPacketMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OnTrackPacketMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OnTrackPacketMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnTrackPacketMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OnTrackPacketMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OnTrackPacketMsg)
    MergeFrom(*source);
  }
}

void OnTrackPacketMsg::MergeFrom(const OnTrackPacketMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OnTrackPacketMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pkt()) {
    mutable_pkt()->::Packet::MergeFrom(from.pkt());
  }
  if (from.pcid() != 0) {
    set_pcid(from.pcid());
  }
}

void OnTrackPacketMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OnTrackPacketMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnTrackPacketMsg::CopyFrom(const OnTrackPacketMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OnTrackPacketMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnTrackPacketMsg::IsInitialized() const {
  return true;
}

void OnTrackPacketMsg::Swap(OnTrackPacketMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnTrackPacketMsg::InternalSwap(OnTrackPacketMsg* other) {
  std::swap(pkt_, other->pkt_);
  std::swap(pcid_, other->pcid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnTrackPacketMsg::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnTrackPacketMsg

// uint64 pcid = 30;
void OnTrackPacketMsg::clear_pcid() {
  pcid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OnTrackPacketMsg::pcid() const {
  // @@protoc_insertion_point(field_get:OnTrackPacketMsg.pcid)
  return pcid_;
}
void OnTrackPacketMsg::set_pcid(::google::protobuf::uint64 value) {
  
  pcid_ = value;
  // @@protoc_insertion_point(field_set:OnTrackPacketMsg.pcid)
}

// .Packet pkt = 31;
bool OnTrackPacketMsg::has_pkt() const {
  return this != internal_default_instance() && pkt_ != NULL;
}
void OnTrackPacketMsg::clear_pkt() {
  if (GetArenaNoVirtual() == NULL && pkt_ != NULL) delete pkt_;
  pkt_ = NULL;
}
const ::Packet& OnTrackPacketMsg::pkt() const {
  // @@protoc_insertion_point(field_get:OnTrackPacketMsg.pkt)
  return pkt_ != NULL ? *pkt_
                         : *::Packet::internal_default_instance();
}
::Packet* OnTrackPacketMsg::mutable_pkt() {
  
  if (pkt_ == NULL) {
    pkt_ = new ::Packet;
  }
  // @@protoc_insertion_point(field_mutable:OnTrackPacketMsg.pkt)
  return pkt_;
}
::Packet* OnTrackPacketMsg::release_pkt() {
  // @@protoc_insertion_point(field_release:OnTrackPacketMsg.pkt)
  
  ::Packet* temp = pkt_;
  pkt_ = NULL;
  return temp;
}
void OnTrackPacketMsg::set_allocated_pkt(::Packet* pkt) {
  delete pkt_;
  pkt_ = pkt;
  if (pkt) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:OnTrackPacketMsg.pkt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddTracksReq::kPcidFieldNumber;
const int AddTracksReq::kTrackSrcsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddTracksReq::AddTracksReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AddTracksReq)
}
AddTracksReq::AddTracksReq(const AddTracksReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tracksrcs_(from.tracksrcs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pcid_ = from.pcid_;
  // @@protoc_insertion_point(copy_constructor:AddTracksReq)
}

void AddTracksReq::SharedCtor() {
  pcid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

AddTracksReq::~AddTracksReq() {
  // @@protoc_insertion_point(destructor:AddTracksReq)
  SharedDtor();
}

void AddTracksReq::SharedDtor() {
}

void AddTracksReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddTracksReq::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddTracksReq& AddTracksReq::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddTracksReq* AddTracksReq::New(::google::protobuf::Arena* arena) const {
  AddTracksReq* n = new AddTracksReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddTracksReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AddTracksReq)
  tracksrcs_.Clear();
  pcid_ = GOOGLE_ULONGLONG(0);
}

bool AddTracksReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AddTracksReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 pcid = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TrackSrc trackSrcs = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tracksrcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AddTracksReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AddTracksReq)
  return false;
#undef DO_
}

void AddTracksReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AddTracksReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pcid = 32;
  if (this->pcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(32, this->pcid(), output);
  }

  // repeated .TrackSrc trackSrcs = 33;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tracksrcs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->tracksrcs(static_cast<int>(i)), output);
  }

  // @@protoc_insertion_point(serialize_end:AddTracksReq)
}

::google::protobuf::uint8* AddTracksReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AddTracksReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pcid = 32;
  if (this->pcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(32, this->pcid(), target);
  }

  // repeated .TrackSrc trackSrcs = 33;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tracksrcs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33, this->tracksrcs(static_cast<int>(i)), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AddTracksReq)
  return target;
}

size_t AddTracksReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AddTracksReq)
  size_t total_size = 0;

  // repeated .TrackSrc trackSrcs = 33;
  {
    unsigned int count = static_cast<unsigned int>(this->tracksrcs_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tracksrcs(static_cast<int>(i)));
    }
  }

  // uint64 pcid = 32;
  if (this->pcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pcid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddTracksReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AddTracksReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddTracksReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddTracksReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AddTracksReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AddTracksReq)
    MergeFrom(*source);
  }
}

void AddTracksReq::MergeFrom(const AddTracksReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AddTracksReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tracksrcs_.MergeFrom(from.tracksrcs_);
  if (from.pcid() != 0) {
    set_pcid(from.pcid());
  }
}

void AddTracksReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AddTracksReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddTracksReq::CopyFrom(const AddTracksReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AddTracksReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddTracksReq::IsInitialized() const {
  return true;
}

void AddTracksReq::Swap(AddTracksReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddTracksReq::InternalSwap(AddTracksReq* other) {
  tracksrcs_.InternalSwap(&other->tracksrcs_);
  std::swap(pcid_, other->pcid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddTracksReq::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddTracksReq

// uint64 pcid = 32;
void AddTracksReq::clear_pcid() {
  pcid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AddTracksReq::pcid() const {
  // @@protoc_insertion_point(field_get:AddTracksReq.pcid)
  return pcid_;
}
void AddTracksReq::set_pcid(::google::protobuf::uint64 value) {
  
  pcid_ = value;
  // @@protoc_insertion_point(field_set:AddTracksReq.pcid)
}

// repeated .TrackSrc trackSrcs = 33;
int AddTracksReq::tracksrcs_size() const {
  return tracksrcs_.size();
}
void AddTracksReq::clear_tracksrcs() {
  tracksrcs_.Clear();
}
const ::TrackSrc& AddTracksReq::tracksrcs(int index) const {
  // @@protoc_insertion_point(field_get:AddTracksReq.trackSrcs)
  return tracksrcs_.Get(index);
}
::TrackSrc* AddTracksReq::mutable_tracksrcs(int index) {
  // @@protoc_insertion_point(field_mutable:AddTracksReq.trackSrcs)
  return tracksrcs_.Mutable(index);
}
::TrackSrc* AddTracksReq::add_tracksrcs() {
  // @@protoc_insertion_point(field_add:AddTracksReq.trackSrcs)
  return tracksrcs_.Add();
}
::google::protobuf::RepeatedPtrField< ::TrackSrc >*
AddTracksReq::mutable_tracksrcs() {
  // @@protoc_insertion_point(field_mutable_list:AddTracksReq.trackSrcs)
  return &tracksrcs_;
}
const ::google::protobuf::RepeatedPtrField< ::TrackSrc >&
AddTracksReq::tracksrcs() const {
  // @@protoc_insertion_point(field_list:AddTracksReq.trackSrcs)
  return tracksrcs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Empty)
}

void Empty::SharedCtor() {
  _cached_size_ = 0;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  protobuf_rpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

Empty* Empty::New(::google::protobuf::Arena* arena) const {
  Empty* n = new Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:Empty)
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Empty)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Empty

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
